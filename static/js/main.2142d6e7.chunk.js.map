{"version":3,"sources":["Component/Routes/PrivateRoute.js","constrains.js","firebaseConnect.js","Component/Dialog/SignInDialog.js","Component/Dialog/SignUpDialog.js","Component/Layout/Bar.js","Component/Dialog/NotificationDialog.js","Component/Dialog/AddNewEventDialog.js","Component/Dialog/DetailEventDialog.js","Component/Layout/Home.js","App.js","serviceWorker.js","Component/Store/store.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","state","from","location","constraints","email","presence","password","length","minimum","maximum","message","confirmPassword","equality","clientName","startTime","duration","numericality","notLessThanOrEqualTo","staffName","firebaseConnect","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SignInDialog","handleKeyPress","event","key","altKey","ctrlKey","metaKey","shiftKey","signIn","onEmailChange","setState","target","value","onPasswordChange","openSnackbar","snackbar","autoHideDuration","readingTime","time","open","errors","validate","auth","signInWithEmailAndPassword","then","setItem","history","push","catch","reason","code","onCancelClick","closeSignIn","this","Dialog","onClose","onKeyPress","DialogTitle","DialogContent","DialogContentText","TextField","autoComplete","error","fullWidth","helperText","margin","onChange","placeholder","required","type","DialogActions","Button","color","onClick","disabled","variant","Snackbar","closeSnackbar","SignUpDialog","handleEmailAddressChange","handlePasswordChange","handleConfirmPasswordChange","closeSignUp","handleSignUpClick","createUserWithEmailAndPassword","window","JSON","stringify","slideImages","properties","transitionDuration","infinite","indicators","arrows","oldIndex","newIndex","console","log","Login","openMenu","anchorEl","currentTarget","menu","closeMenu","openSignIn","isLogin","openSignUp","isSignUp","classes","AppBar","position","Toolbar","Typography","style","flexGrow","Fragment","className","signUpButton","withStyles","theme","marginRight","spacing","NotificationDialog","handleClose","id","autoFocus","AddNewEventDialog","onClientNameChange","onStartTimeChange","Date","onDurationChange","onLocationChange","onStaffNameChange","addNewEvent","closeAddEvent","newEvent","client_name","start_time","staff_name","user","firestore","collection","add","docRef","eventAdded","title","start","end","setHours","getHours","parseInt","isAddEventOK","eventAdd","sendEventAdd","bind","getEventAdd","label","utils","DateFnsUtils","DateTimePicker","inputProps","min","step","DetailEventDialog","editEvent","doc","update","eventUpdae","updateEvent","isScheduleChange","closeDetailEvent","removeEvent","confirm","delete","getIDEventDelete","confirmDeleteState","localizer","momentLocalizer","moment","Home","onSignOutClick","removeItem","signOut","addEvent","isAddEvent","showDetailEvent","detailEvent","isDetailEvent","events","findIndex","item","newState","filter","currentEvent","index","change","eventsDB","where","get","snapshot","forEach","eventItem","data","seconds","onSnapshot","docChanges","eventChange","newEvents","nextState","IconButton","Menu","Boolean","MenuItem","Container","fixed","Fab","aria-label","fab","height","startAccessor","endAccessor","defaultDate","toDate","onSelectEvent","App","basename","path","exact","Bar","hostname","match","redux","require","allReducerInitialState","openSignInDialog","openSignUpDialog","isSignIned","store","createStore","action","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2142d6e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route , Redirect} from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          localStorage.getItem('email') ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\nexport default PrivateRoute;","var constraints = {\r\n    email: {\r\n      presence: {\r\n        \"allowEmpty\": false\r\n      },\r\n      email: true\r\n    },\r\n    password: {\r\n        presence: {\r\n            \"allowEmpty\": false\r\n        },\r\n      length: {\r\n        minimum: 6,\r\n        maximum: 15,\r\n        message: \"must be at least 6 characters and less than 15 characters\"\r\n      }\r\n    },\r\n    confirmPassword: {\r\n      equality: \"password\"\r\n    },\r\n    clientName: {\r\n      presence: {\r\n          \"allowEmpty\": false\r\n      }\r\n    },\r\n    startTime: {\r\n      presence: {\r\n          \"allowEmpty\": false\r\n      }\r\n    },\r\n    duration: {\r\n      presence: {\r\n          \"allowEmpty\": false\r\n      },\r\n      numericality: true,\r\n      notLessThanOrEqualTo: 0\r\n    },\r\n    location: {\r\n      presence: {\r\n          \"allowEmpty\": false\r\n      }\r\n    },\r\n    staffName: {\r\n      presence: {\r\n          \"allowEmpty\": false\r\n      }\r\n    }\r\n\r\n  };\r\n\r\nexport default constraints;","import * as firebase from 'firebase';\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDpyl3l_F1QxZAe0q-P_FpmzFYr8pSrROA\",\r\n    authDomain: \"calendarmanagement-cb8a9.firebaseapp.com\",\r\n    databaseURL: \"https://calendarmanagement-cb8a9.firebaseio.com\",\r\n    projectId: \"calendarmanagement-cb8a9\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"491867746993\",\r\n    appId: \"1:491867746993:web:fc60858c7bd86b88142890\"\r\n  };\r\n  // Initialize Firebase\r\n\r\nexport const firebaseConnect =   firebase.initializeApp(firebaseConfig);;","import React, { Component  } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport validate from 'validate.js';\r\nimport constraints from '../../constrains';\r\nimport {firebaseConnect} from '../../firebaseConnect';\r\nimport readingTime from 'reading-time';\r\n\r\nclass SignInDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            open: false,\r\n            errors: null,\r\n            snackbar: {\r\n                autoHideDuration: 0,\r\n                message: '',\r\n                open: false\r\n           },\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n    handleKeyPress = (event) => {\r\n      const key = event.key;\r\n  \r\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n        return;\r\n      }\r\n  \r\n      if (key === 'Enter') {\r\n        this.signIn();\r\n      }\r\n    };\r\n\r\n    onEmailChange = event => {\r\n        this.setState({email: event.target.value});\r\n      };\r\n    onPasswordChange = event => {\r\n        this.setState({password: event.target.value});\r\n      };\r\n\r\n    openSnackbar = (message) => {\r\n        this.setState({\r\n          snackbar: {\r\n            autoHideDuration: readingTime(message).time * 2,\r\n            message,\r\n            open: true\r\n          }\r\n        });\r\n      };\r\n\r\n    signIn = () => {  \r\n        const { email, password } = this.state;    \r\n        const errors = validate({\r\n            email: email,\r\n            password: password\r\n          }, {\r\n            email: constraints.email,\r\n            password: constraints.password\r\n          });\r\n          if (errors) {\r\n            this.setState({ errors });\r\n          } else {\r\n              firebaseConnect.auth().signInWithEmailAndPassword(email, password)\r\n              .then( () => {\r\n                localStorage.setItem('email', email);\r\n                this.setState({ \r\n                    errors: null,\r\n                });\r\n                this.props.history.push({pathname: 'home'});  \r\n              })\r\n              .catch((reason) => {\r\n                const code = reason.code;\r\n                const message = reason.message;\r\n        \r\n                switch (code) {\r\n                  case 'auth/email-already-in-use':\r\n                  case 'auth/invalid-email':\r\n                  case 'auth/operation-not-allowed':\r\n                  case 'auth/weak-password':\r\n                    this.openSnackbar(message);\r\n                    return;\r\n                  default:\r\n                    this.openSnackbar(message);\r\n                    return;\r\n                }\r\n                })\r\n                \r\n        }\r\n    }\r\n    onCancelClick = () => {\r\n      this.setState({open: false});\r\n      this.props.closeSignIn();\r\n    }\r\n    \r\n    render() {\r\n        const { snackbar } = this.state; \r\n        const { open } = this.state;\r\n        const { email, password, errors } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog open={open} onClose={this.onCancelClick} onKeyPress={this.handleKeyPress}>\r\n                    <DialogTitle>\r\n                    Sign in to your account\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Some features might be unavailable until you sign in.\r\n                            While you're signed in you can manage your account.\r\n                        </DialogContentText>\r\n                        <form>\r\n                            <TextField\r\n                            autoComplete=\"email\"\r\n                            error={!!(errors && errors.email)}\r\n                            fullWidth\r\n                            helperText={(errors && errors.email) ? errors.email[0] : ''}\r\n                            margin=\"normal\"\r\n                            onChange={this.onEmailChange}\r\n                            placeholder=\"E-mail address\"\r\n                            required\r\n                            type=\"email\"\r\n                            value={email}\r\n                            />\r\n\r\n                            <TextField\r\n                            autoComplete=\"current-password\"\r\n                            error={!!(errors && errors.password)}\r\n                            fullWidth\r\n                            helperText={(errors && errors.password) ? errors.password[0] : ''}\r\n                            margin=\"normal\"\r\n                            onChange={this.onPasswordChange}\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            type=\"password\"\r\n                            value={password}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={() => this.onCancelClick()}>Cancel</Button>\r\n                        <Button color=\"primary\" disabled={(!email || !password)}  variant=\"contained\" onClick = {() => this.signIn()}>Sign In</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Snackbar\r\n                  autoHideDuration={snackbar.autoHideDuration}\r\n                  message={snackbar.message}\r\n                  open={snackbar.open}\r\n                  onClose={this.closeSnackbar}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (SignInDialog);","import React, { Component  } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {firebaseConnect} from '../../firebaseConnect';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport readingTime from 'reading-time';\r\nimport validate from 'validate.js';\r\nimport constraints from '../../constrains'\r\n\r\nclass SignUpDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            snackbar: {\r\n                autoHideDuration: 0,\r\n                message: '',\r\n                open: false\r\n           },\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleEmailAddressChange = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    handleConfirmPasswordChange = (event) => {\r\n        this.setState({\r\n            confirmPassword: event.target.value\r\n        });\r\n    }\r\n\r\n    onCancelClick = () => {\r\n        this.setState({open: false});\r\n        this.props.closeSignUp();\r\n      }\r\n\r\n    openSnackbar = (message) => {\r\n        this.setState({\r\n          snackbar: {\r\n            autoHideDuration: readingTime(message).time * 2,\r\n            message,\r\n            open: true\r\n          }\r\n        });\r\n      };\r\n\r\n    handleSignUpClick = () => {\r\n        const { email, password, confirmPassword } = this.state;\r\n        const errors = validate({\r\n            email: email,\r\n            password: password,\r\n            confirmPassword: confirmPassword\r\n          }, {\r\n            email: constraints.email,\r\n            password: constraints.password,\r\n            confirmPassword: constraints.confirmPassword\r\n          });\r\n          if (errors) {\r\n            this.setState({ errors });\r\n          } else {\r\n            firebaseConnect.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( () => {\r\n              window.localStorage.setItem('email', JSON.stringify(email));\r\n              this.setState({ \r\n                  errors: null,\r\n              });\r\n              this.props.history.push({pathname: 'home'});  \r\n            })\r\n            .catch((reason) => {\r\n              const code = reason.code;\r\n              const message = reason.message;\r\n      \r\n              switch (code) {\r\n                case 'auth/email-already-in-use':\r\n                case 'auth/invalid-email':\r\n                case 'auth/operation-not-allowed':\r\n                case 'auth/weak-password':\r\n                  this.openSnackbar(message);\r\n                  return;\r\n      \r\n                default:\r\n                  this.openSnackbar(message);\r\n                  return;\r\n              }\r\n              })\r\n          }\r\n    }\r\n    \r\n    render() {\r\n        const { snackbar } = this.state\r\n        const { errors } = this.state;\r\n        const { open } = this.state;\r\n        const { email, password, confirmPassword } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog open={open} onClose={this.onCancelClick}>\r\n                    <DialogTitle>\r\n                    Sign up for an account\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Create an account to access features that are unavailable to users who haven't signed up.\r\n                        </DialogContentText>\r\n                        <form>\r\n                        <TextField\r\n                            autoComplete=\"email\"\r\n                            error={!!(errors && errors.email)}\r\n                            fullWidth\r\n                            helperText={(errors && errors.email) ? errors.email[0] : ''}\r\n                            margin=\"normal\"\r\n                            onChange={this.handleEmailAddressChange}\r\n                            placeholder=\"E-mail address\"\r\n                            required\r\n                            type=\"email\"\r\n                            value={email}\r\n                            />\r\n\r\n                            <TextField\r\n                            autoComplete=\"current-password\"\r\n                            error={!!(errors && errors.password)}\r\n                            fullWidth\r\n                            helperText={(errors && errors.password) ? errors.password[0] : ''}\r\n                            margin=\"normal\"\r\n                            onChange={this.handlePasswordChange}\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            type=\"password\"\r\n                            value={password}\r\n                            />\r\n\r\n                            <TextField\r\n                            autoComplete=\"current-password\"\r\n                            error={!!(errors && errors.confirmPassword)}\r\n                            fullWidth\r\n                            helperText={(errors && errors.confirmPassword) ? errors.confirmPassword[0] : ''}\r\n                            margin=\"normal\"\r\n                            onChange={this.handleConfirmPasswordChange}\r\n                            placeholder=\"Confirm Password\"\r\n                            required\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={() => this.onCancelClick()}>Cancel</Button>\r\n                        <Button color=\"primary\" disabled={(!email|| !password || !confirmPassword)}  variant=\"contained\" onClick = {() => this.handleSignUpClick()}>Sign Up</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Snackbar\r\n                  autoHideDuration={snackbar.autoHideDuration}\r\n                  message={snackbar.message}\r\n                  open={snackbar.open}\r\n                  onClose={this.closeSnackbar}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default (SignUpDialog);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SignInDialog from '../Dialog/SignInDialog';\r\nimport SignUpDialog from '../Dialog/SignUpDialog';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Slide } from 'react-slideshow-image';\r\nconst styles = (theme) => ({\r\n    signUpButton: {\r\n      marginRight: theme.spacing(2)\r\n    }\r\n  });\r\n\r\n  const slideImages = [\r\n    'images/1.jpg',\r\n    'images/2.jpg',\r\n    'images/3.jpg',\r\n    'images/4.jpg',\r\n    'images/5.jpg',\r\n  ];\r\n   \r\n  const properties = {\r\n    duration: 5000,\r\n    transitionDuration: 500,\r\n    infinite: true,\r\n    indicators: true,\r\n    arrows: true,\r\n    onChange: (oldIndex, newIndex) => {\r\n      console.log(`slide transition from ${oldIndex} to ${newIndex}`);\r\n    }\r\n  }\r\n\r\n\r\nclass Login extends Component { \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: {\r\n                anchorEl: null\r\n              },\r\n              isLogin : false,\r\n              isSignUp: false\r\n        };\r\n    }\r\n\r\n    openMenu = (event) => {\r\n        const anchorEl = event.currentTarget;\r\n        this.setState({\r\n          menu: {\r\n            anchorEl\r\n          }\r\n        });\r\n      };\r\n    \r\n      closeMenu = () => {\r\n        this.setState({\r\n          menu: {\r\n            anchorEl: null\r\n          }\r\n        });\r\n      };\r\n\r\n      openSignIn = () => {\r\n          this.setState({isLogin: true});\r\n      }\r\n\r\n      openSignUp = () => {\r\n        this.setState({isSignUp: true});\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if(localStorage.getItem('email') !== null){ return <Redirect to='/home'/>}\r\n        return (\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                <Toolbar variant=\"regular\">\r\n                <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">Calendar Management</Typography>\r\n                    <React.Fragment>\r\n                        <Button  color=\"secondary\"  className={classes.signUpButton} variant=\"contained\"  onClick={() =>this.openSignUp()} >Sign Up</Button>\r\n                        <Button color=\"secondary\"  variant=\"contained\" onClick={() =>this.openSignIn()}>Sign In</Button>\r\n                    </React.Fragment>\r\n                \r\n                {this.state.isLogin &&\r\n                    <SignInDialog history={this.props.history} closeSignIn={ () => this.setState({isLogin: false})}></SignInDialog>\r\n                }\r\n\r\n                {this.state.isSignUp &&\r\n                    <SignUpDialog history={this.props.history} closeSignUp={ () => this.setState({isSignUp: false})}></SignUpDialog>\r\n                }\r\n                </Toolbar>\r\n                </AppBar>\r\n                <Slide {...properties}>\r\n                <div className=\"each-slide\">\r\n                  <div style={{'backgroundImage': `url(${slideImages[0]})`}}>\r\n                  </div>\r\n                </div>\r\n                <div className=\"each-slide\">\r\n                  <div style={{'backgroundImage': `url(${slideImages[1]})`}}>\r\n                  </div>\r\n                </div>\r\n                <div className=\"each-slide\">\r\n                  <div style={{'backgroundImage': `url(${slideImages[2]})`}}>\r\n                  </div>\r\n                </div>\r\n                <div className=\"each-slide\">\r\n                  <div style={{'backgroundImage': `url(${slideImages[3]})`}}>\r\n                  </div>\r\n                </div>\r\n                <div className=\"each-slide\">\r\n                  <div style={{'backgroundImage': `url(${slideImages[4]})`}}>\r\n                  </div>\r\n                </div>\r\n              </Slide>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(Login);","import React, { Component  } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass NotificationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open: false});\r\n       // window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const { open } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog  open={open}  onClose={this.handleClose}>\r\n                    <DialogTitle id=\"alert-dialog-title\">Notification</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                        Your schedule have been updated.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                            OK\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotificationDialog;","import React, { Component } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NotificationDialog from \"./NotificationDialog\"\r\nimport Button from '@material-ui/core/Button';\r\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\r\nimport constraints from '../../constrains';\r\nimport validate from 'validate.js';\r\nimport {firebaseConnect} from '../../firebaseConnect';\r\nimport {\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nclass AddNewEventDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            clientName: '',\r\n            startTime: new Date(),\r\n            duration: 0,\r\n            location:'',\r\n            staffName: '',\r\n            isAddEventOK: false,\r\n            eventAdd: {}\r\n        };\r\n    }\r\n\r\n    onClientNameChange = event => {\r\n        this.setState({clientName: event.target.value});\r\n      };\r\n    onStartTimeChange = event => {\r\n        this.setState({startTime: new Date(event)});\r\n      };\r\n\r\n      onDurationChange = event => {\r\n        this.setState({duration: event.target.value});\r\n      };\r\n      onLocationChange = event => {\r\n        this.setState({location: event.target.value});\r\n      };\r\n      onStaffNameChange = event => {\r\n        this.setState({staffName: event.target.value});\r\n      };\r\n\r\n      handleKeyPress = (event) => {\r\n        const key = event.key;\r\n    \r\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n          return;\r\n        }\r\n    \r\n        if (key === 'Enter') {\r\n          this.addNewEvent();\r\n        }\r\n      };\r\n      onCancelClick = () => {\r\n        this.setState({open: false});\r\n        this.props.closeAddEvent();\r\n      }\r\n      addNewEvent = () => {\r\n        const { clientName, startTime, duration, location, staffName } = this.state; \r\n        const errors = validate({\r\n            clientName: clientName,\r\n            startTime: startTime,\r\n            duration: duration,\r\n            location: location,\r\n            staffName: staffName\r\n          }, {\r\n            clientName: constraints.clientName,\r\n            startTime: constraints.startTime,\r\n            duration: validate.duration,\r\n            location: constraints.location,\r\n            staffName: constraints.staffName\r\n          });\r\n          if (errors) {\r\n            this.setState({ errors });\r\n          } else {\r\n            var newEvent = {\r\n                client_name: this.state.clientName,\r\n                start_time: this.state.startTime,\r\n                duration: this.state.duration,\r\n                location: this.state.location,\r\n                staff_name : this.state.staffName,\r\n                user: localStorage.getItem('email')\r\n            }\r\n            const db = firebaseConnect.firestore();\r\n              db.collection(\"events\").add(newEvent)\r\n            .then(function (docRef) {  \r\n              var eventAdded = {\r\n                id: docRef.id,\r\n                client_name: this.state.clientName,\r\n                title: \"Hẹn với \" + this.state.clientName,\r\n                start: new Date(this.state.startTime),\r\n                end: new Date(new Date(this.state.startTime).setHours(new Date(this.state.startTime).getHours() + parseInt(this.state.duration))),\r\n                location: this.state.location,\r\n                staff_name: this.state.staffName,\r\n                duration: this.state.duration\r\n              };  \r\n             \r\n              this.setState({isAddEventOK: true, open: false, eventAdd: eventAdded});\r\n              //Gửi event lên component Home để cập nhật Calendar\r\n              this.sendEventAdd();\r\n            }.bind(this))\r\n            .catch(function(error) {\r\n                console.error(\"Error adding document: \", error);\r\n            });\r\n          } \r\n           \r\n      }\r\n      sendEventAdd = () => {\r\n        this.props.getEventAdd(this.state.eventAdd);\r\n        this.props.closeAddEvent();\r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        const { open } = this.state;\r\n        const { clientName, duration, location, staffName,  errors } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog open={open} onClose={this.onCancelClick} onKeyPress={this.handleKeyPress}>\r\n                    <DialogTitle>\r\n                    Add new event to your calendar\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form>\r\n                            <TextField\r\n                            label=\"Client name\"\r\n                           error={!!(errors && errors.clientName)}\r\n                            fullWidth\r\n                           helperText={(errors && errors.clientName) ? errors.clientName[0] : ''}\r\n                            margin=\"normal\"\r\n                            onChange={this.onClientNameChange}\r\n                            placeholder=\"Client name\"\r\n                            required\r\n                            type=\"text\"\r\n                            value={clientName}\r\n                            />\r\n                            \r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DateTimePicker value={this.state.startTime} onChange={this.onStartTimeChange} label=\"Start time\"/>\r\n                            </MuiPickersUtilsProvider>\r\n\r\n                          <TextField\r\n                          label=\"Duration\"\r\n                           error={!!(errors && errors.duration)}\r\n                           fullWidth\r\n                           helperText={(errors && errors.duration) ? errors.duration[0] : ''}\r\n                           margin=\"normal\"\r\n                           onChange={this.onDurationChange}\r\n                           placeholder=\"Duration (hours)\"\r\n                           required\r\n                           type=\"number\"\r\n                           inputProps={{ min: \"0\", step: \"0.5\" }}\r\n                           value={duration}\r\n                           />\r\n\r\n                          <TextField\r\n                          label=\"Location\"\r\n                           error={!!(errors && errors.location)}\r\n                           fullWidth\r\n                           helperText={(errors && errors.location) ? errors.location[0] : ''}\r\n                           margin=\"normal\"\r\n                           onChange={this.onLocationChange}\r\n                           placeholder=\"Location\"\r\n                           required\r\n                           type=\"text\"\r\n                           value={location}\r\n                           />\r\n                          <TextField\r\n                           label=\"Staff name\"\r\n                           error={!!(errors && errors.staffName)}\r\n                           fullWidth\r\n                           helperText={(errors && errors.staffName) ? errors.staffName[0] : ''}\r\n                           margin=\"normal\"\r\n                           onChange={this.onStaffNameChange}\r\n                           placeholder=\"Staff name\"\r\n                           required\r\n                           type=\"text\"\r\n                           value={staffName}\r\n                           />\r\n\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={this.onCancelClick}>Cancel</Button>\r\n                        <Button color=\"primary\" onClick={this.addNewEvent}  variant=\"contained\" >Add</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                {this.state.isAddEventOK &&\r\n                  <NotificationDialog />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewEventDialog;","import React, { Component  } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n  } from \"@material-ui/pickers\";\r\n  import {firebaseConnect} from '../../firebaseConnect';\r\nimport NotificationDialog from './NotificationDialog';\r\n\r\n\r\nclass DetailEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            isScheduleChange: false,\r\n            confirmDeleteState: false,\r\n            clientName: this.props.clientName,\r\n            duration: this.props.duration,\r\n            location: this.props.location,\r\n            staffName: this.props.staffName,\r\n            startTime: this.props.startTime,\r\n            id: this.props.id\r\n        }\r\n    }\r\n    onClientNameChange = event => {\r\n        this.setState({clientName: event.target.value});\r\n      };\r\n    onStartTimeChange = event => {\r\n        this.setState({startTime: new Date(event)});\r\n      };\r\n\r\n      onDurationChange = event => {\r\n        this.setState({duration: event.target.value});\r\n      };\r\n      onLocationChange = event => {\r\n        this.setState({location: event.target.value});\r\n      };\r\n      onStaffNameChange = event => {\r\n        this.setState({staffName: event.target.value});\r\n      };\r\n\r\n      handleKeyPress = (event) => {\r\n        const key = event.key;\r\n    \r\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n          return;\r\n        }\r\n    \r\n        if (key === 'Enter') {\r\n          this.editEvent();\r\n        }\r\n      };\r\n\r\n      editEvent = () => {\r\n        const db = firebaseConnect.firestore();\r\n        db.collection(\"events\").doc(this.state.id).update({\r\n          client_name: this.state.clientName,\r\n          start_time: this.state.startTime,\r\n          duration: this.state.duration,\r\n          location: this.state.location,\r\n          user: localStorage.getItem('email'),\r\n          staff_name: this.state.staffName\r\n        }).then(function(){\r\n          var eventUpdae = {\r\n            id: this.state.id,\r\n            client_name: this.state.clientName,\r\n            title: \"Hẹn với \" + this.state.clientName,\r\n            start: new Date(this.state.startTime),\r\n            end: new Date(new Date(this.state.startTime).setHours(new Date(this.state.startTime).getHours() + parseInt(this.state.duration))),\r\n            location: this.state.location,\r\n            staff_name: this.state.staffName,\r\n            duration: this.state.duration\r\n          }\r\n          this.props.updateEvent(eventUpdae);\r\n          this.setState({isScheduleChange: true, open: false});\r\n          this.props.closeDetailEvent(); \r\n        }.bind(this))\r\n      }\r\n      \r\n      onCancelClick = () => {\r\n        this.setState({open: false});\r\n        this.props.closeDetailEvent();\r\n      }\r\n      removeEvent = () => {  \r\n        if(window.confirm('Do you want to cancle this schedule?') === true){\r\n          const db = firebaseConnect.firestore();\r\n          db.collection(\"events\").doc(this.state.id).delete().then(() => {\r\n            this.setState({\r\n              isScheduleChange: true,\r\n              open: false\r\n            });\r\n            this.props.getIDEventDelete(this.state.id);\r\n            this.props.closeDetailEvent();\r\n          }).catch(function(error) {\r\n              console.error(\"Error removing document: \", error);\r\n          });\r\n        }\r\n      }\r\n    \r\n    render() {\r\n        const { open } = this.state;\r\n        const { clientName, duration, location, staffName,  errors } = this.state;\r\n        return (\r\n            <div>\r\n               <Dialog open={open} onClose={this.onCancelClick} onKeyPress={this.handleKeyPress}>\r\n                    <DialogTitle>\r\n                   DetailEvent\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form>\r\n                        <TextField\r\n                           label=\"Client Name\"\r\n                           error={!!(errors && errors.clientName)}\r\n                            fullWidth\r\n                           helperText={(errors && errors.clientName) ? errors.clientName[0] : ''}\r\n                            margin=\"normal\"\r\n                            onChange={this.onClientNameChange}\r\n                            placeholder=\"Client name\"\r\n                            required\r\n                            type=\"text\"\r\n                            value={clientName}\r\n                            />\r\n                            \r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <DateTimePicker value={this.state.startTime} onChange={this.onStartTimeChange}  label=\"Start time\"/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                          <TextField\r\n                           label=\"Duration\"\r\n                           error={!!(errors && errors.duration)}\r\n                           fullWidth\r\n                           helperText={(errors && errors.duration) ? errors.duration[0] : ''}\r\n                           margin=\"normal\"\r\n                           onChange={this.onDurationChange}\r\n                           placeholder=\"Duration (hours)\"\r\n                           required\r\n                           type=\"number\"\r\n                           inputProps={{ min: \"0\", step: \"1\" }}\r\n                           value={duration}\r\n                           />\r\n\r\n                          <TextField\r\n                           label=\"Location\"\r\n                           error={!!(errors && errors.location)}\r\n                           fullWidth\r\n                           helperText={(errors && errors.location) ? errors.location[0] : ''}\r\n                           margin=\"normal\"\r\n                           onChange={this.onLocationChange}\r\n                           placeholder=\"Location\"\r\n                           required\r\n                           type=\"text\"\r\n                           value={location}\r\n                           />\r\n                          <TextField\r\n                           label=\"Staff Name\"\r\n                           error={!!(errors && errors.staffName)}\r\n                           fullWidth\r\n                           helperText={(errors && errors.staffName) ? errors.staffName[0] : ''}\r\n                           margin=\"normal\"\r\n                           onChange={this.onStaffNameChange}\r\n                           placeholder=\"Staff name\"\r\n                           required\r\n                           type=\"text\"\r\n                           value={staffName}\r\n                           />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={() => this.onCancelClick()}>Cancel</Button>\r\n                        <Button color=\"inherit\" onClick={() => this.removeEvent()} >Remove</Button>\r\n                        <Button color=\"primary\"  variant=\"contained\" onClick = {() => this.editEvent()}>Edit</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                {this.state.isScheduleChange &&\r\n                  <NotificationDialog />\r\n                }\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailEventDialog;","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport {firebaseConnect} from '../../firebaseConnect';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n import { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport AddNewEventDialog from '../Dialog/AddNewEventDialog';\r\nimport DetailEventDialog from '../Dialog/DetailEventDialog';\r\nconst localizer = momentLocalizer(moment); \r\nconst styles = (theme) => ({\r\n  fab: {\r\n    margin: theme.spacing(2),\r\n  }\r\n});\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: {\r\n                anchorEl: null\r\n              },\r\n             events: [],\r\n             isAddEvent: false,\r\n             change: false,\r\n        };\r\n    }\r\n \r\n    openMenu = (event) => {\r\n        const anchorEl = event.currentTarget;\r\n    \r\n        this.setState({\r\n          menu: {\r\n            anchorEl\r\n          }\r\n        });\r\n      };\r\n    \r\n      closeMenu = () => {\r\n        this.setState({\r\n          menu: {\r\n            anchorEl: null\r\n          }\r\n        });\r\n      };\r\n      \r\n      onSignOutClick = () => {\r\n        localStorage.removeItem('email');\r\n        this.setState({\r\n            menu: {\r\n                anchorEl: null\r\n            },\r\n            event: [],\r\n        });\r\n        firebaseConnect.auth().signOut().then(() => {\r\n          this.props.history.push(\"/\");\r\n             \r\n        }).catch(function(reason) {\r\n          // An error happened.\r\n        });     \r\n    } \r\n\r\n    componentWillMount() {\r\n      const eventsDB = [];\r\n      var db = firebaseConnect.firestore();\r\n      db.collection('events').where(\"user\", \"==\", localStorage.getItem('email')).get()\r\n      .then(function (snapshot) {\r\n          snapshot.forEach(function(doc){\r\n            var eventItem = {\r\n              id: doc.id,\r\n              client_name: doc.data().client_name,\r\n              title: \"Hẹn với \" + doc.data().client_name,\r\n              start: new Date(doc.data().start_time.seconds*1000),\r\n              end: new Date(doc.data().start_time.seconds*1000 + doc.data().duration*3600000),\r\n              location: doc.data().location,\r\n              staff_name: doc.data().staff_name,\r\n              duration: doc.data().duration\r\n            }\r\n            eventsDB.push(eventItem);\r\n          });\r\n          this.setState({events: eventsDB});\r\n        }.bind(this))\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n      var db = firebaseConnect.firestore();\r\n      db.collection(\"events\").onSnapshot(function (snapshot) {\r\n              snapshot.docChanges().forEach((change) => {\r\n                  if (change.type === \"added\") {\r\n                    if(change.doc.data().user === localStorage.getItem('email')){\r\n                      if(this.state.events.findIndex(item => item.id === change.doc.id) === -1){\r\n                        var eventAdd = {\r\n                          id: change.doc.id,\r\n                          client_name: change.doc.data().client_name,\r\n                          title: \"Hẹn với \" + change.doc.data().client_name,\r\n                          start: new Date(change.doc.data().start_time.seconds*1000),\r\n                          end: new Date(change.doc.data().start_time.seconds*1000 + change.doc.data().duration*3600000),\r\n                          location: change.doc.data().location,\r\n                          staff_name: change.doc.data().staff_name,\r\n                          duration: change.doc.data().duration\r\n                        }\r\n                          this.state.events.push(eventAdd);\r\n                          this.setState({events: this.state.events})\r\n                      }\r\n                    }\r\n                  }\r\n                  if (change.type === \"modified\") {\r\n                    var currentEvent = this.state.events;\r\n                    var index = currentEvent.findIndex(item => item.id === change.doc.id);\r\n                    var eventChange = {\r\n                      id: change.doc.id,\r\n                      client_name: change.doc.data().client_name,\r\n                      title: \"Hẹn với \" + change.doc.data().client_name,\r\n                      start: new Date(change.doc.data().start_time.seconds*1000),\r\n                      end: new Date(change.doc.data().start_time.seconds*1000 + change.doc.data().duration*3600000),\r\n                      location: change.doc.data().location,\r\n                      staff_name: change.doc.data().staff_name,\r\n                      duration: change.doc.data().duration\r\n                    }\r\n                    currentEvent[index] = eventChange;\r\n                    this.setState({events: currentEvent});  \r\n                  }\r\n                  if (change.type === \"removed\") {\r\n                    var newEvents = this.state.events.filter(item => {\r\n                      return item.id !== change.doc.id\r\n                    } )\r\n                    this.setState({events: newEvents});\r\n                  }\r\n              });\r\n          }.bind(this));\r\n  }\r\n\r\n    addEvent= () => {  \r\n      this.setState({isAddEvent: true});\r\n    }\r\n    shouldComponentUpdate(nextState) {\r\n      if(this.state.change !== nextState.change){\r\n        return true;\r\n      } return false;\r\n    }\r\n\r\n    showDetailEvent = (detailEvent) => {\r\n      this.setState({\r\n        detailEvent: detailEvent,\r\n        isDetailEvent: true\r\n      });\r\n    }\r\n\r\n    getEventAdd = (eventAdd) => {\r\n      if(this.state.events.findIndex(item => item.id === eventAdd.id) === -1){\r\n        this.state.events.push(eventAdd);\r\n        this.setState({events: this.state.events});\r\n      }\r\n    }\r\n\r\n    getIDEventDelete = (id) => {\r\n      var newState = this.state.events.filter(event => {\r\n        return event.id !== id;\r\n      })\r\n      this.setState({events: newState});\r\n    }\r\n\r\n    updateEvent = (event) => {\r\n      var currentEvent = this.state.events;\r\n      var index = currentEvent.findIndex(item => item.id === event.id);\r\n      currentEvent[index] = event;\r\n      this.setState({events: currentEvent});\r\n    }\r\n    render() {\r\n      const {classes} = this.props;\r\n        const { menu } = this.state;\r\n        return ( \r\n            <div>\r\n                <AppBar position=\"static\">\r\n                <Toolbar variant=\"regular\">\r\n                <Typography style={{ flexGrow: 1 }} color=\"inherit\" variant=\"h6\">Calendar Management</Typography>               \r\n                    <React.Fragment>\r\n                        <IconButton color=\"inherit\" onClick={this.openMenu} >\r\n                            <PersonIcon />\r\n                        </IconButton>\r\n\r\n                        <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\r\n                            <MenuItem  >Settings</MenuItem>\r\n                            <MenuItem  onClick={() =>this.onSignOutClick()}>Sign out</MenuItem>\r\n                        </Menu>    \r\n                    </React.Fragment>\r\n                </Toolbar>\r\n                </AppBar>\r\n                <Container fixed>\r\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={this.addEvent}>\r\n                      <AddIcon />\r\n                    </Fab>\r\n                    <div style={{ height: '500pt'}}> \r\n                        <Calendar\r\n                        events={this.state.events}\r\n                        startAccessor=\"start\"\r\n                        endAccessor=\"end\"\r\n                        defaultDate={moment().toDate()}\r\n                        localizer={localizer}\r\n                        onSelectEvent={(detailEvent) => this.showDetailEvent(detailEvent)}\r\n                        />\r\n                     </div>\r\n                </Container>\r\n                {this.state.isAddEvent && \r\n                      <AddNewEventDialog closeAddEvent = { () => {this.setState({isAddEvent: false})}}  getEventAdd = {this.getEventAdd}/>}\r\n                {this.state.isDetailEvent && \r\n                    <DetailEventDialog \r\n                      clientName={this.state.detailEvent.client_name} \r\n                      location={this.state.detailEvent.location}\r\n                      duration={this.state.detailEvent.duration}\r\n                      staffName={this.state.detailEvent.staff_name}\r\n                      startTime={this.state.detailEvent.start}\r\n                      id={this.state.detailEvent.id}\r\n                      closeDetailEvent = {() => this.setState({isDetailEvent: false})}\r\n                      getIDEventDelete = {this.getIDEventDelete}\r\n                      updateEvent = {this.updateEvent}\r\n                      />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Route , BrowserRouter } from \"react-router-dom\";\r\nimport PrivateRoute from './Component/Routes/PrivateRoute';\r\nimport Bar from './Component/Layout/Bar';\r\nimport Home from './Component/Layout/Home';\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <BrowserRouter basename={window.location.pathname || ''}>\r\n            <Route path=\"/\" exact component={Bar} /> \r\n            <PrivateRoute path=\"/home\" exact component={Home} /> \r\n        </BrowserRouter >\r\n      </Router>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","var redux = require('redux');\r\n\r\nconst allReducerInitialState = {\r\n    openSignInDialog : false,\r\n    openSignUpDialog : false,\r\n    isSignIned : false\r\n\r\n}\r\nconst allReducer = (state = allReducerInitialState, action) => {\r\n    switch (action.type) {\r\n        case 'DISPLAY_SIGNIN_DIALOG':\r\n            return {...state, openSignInDialog: !state.openSignInDialog}\r\n        case 'DISPLAY_SIGNUP_DIALOG':\r\n            return {...state, openSignUpDialog: !state.openSignUpDialog}\r\n        case 'SIGNINED':\r\n            return {...state, isSignIned: true}\r\n        case 'SIGN_OUT':\r\n            return {...state, isSignIned: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst store = redux.createStore(allReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './Component/Store/store';\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}